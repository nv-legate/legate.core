name: Test legate.core on GH

on:
  workflow_call:
    inputs:
      build-target:
        required: true
        type: string
      repos-name:
        required: true
        type: string
      runs-on:
        required: true
        type: string
      sha:
        required: true
        type: string
      test-scope:
        required: true
        type: string
      use-container:
        required: true
        type: boolean
      enabled:
        required: true
        type: boolean
      ucx-config:
        required: true
        type: string
      ucx-string:
        required: true
        type: string
      nightly-string:
        required: true
        type: string

env:
  ARTIFACT_NAME: "${{ inputs.repos-name }}-${{ inputs.build-target }}${{ inputs.ucx-string }}${{ inputs.nightly-string }}-${{ inputs.sha }}"
  ARTIFACTS_DIR: "${{ github.workspace }}/.artifacts"

jobs:
  test-in-container:
    if: github.repository_owner == 'nv-legate' && inputs.use-container && inputs.enabled
    name: test-${{ inputs.build-target }}${{ inputs.ucx-string }}-sub-workflow
    runs-on: ${{ inputs.runs-on }}

    defaults:
      run:
        shell: bash

    container:
      options: -u root
      image: condaforge/miniforge3:latest
      env:
        PYTHONDONTWRITEBYTECODE: 1
        NVIDIA_VISIBLE_DEVICES: ${{ env.NVIDIA_VISIBLE_DEVICES }}
      volumes:
        - "${{ github.workspace }}/.artifacts:${{ github.workspace }}/.artifacts"
    steps:
      - if: inputs.build-target == 'gpu'
        name: Run nvidia-smi to make sure GPU is working
        run: nvidia-smi

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACTS_DIR }}

      - name: Run ${{ inputs.repos-name }} test / analysis
        run: |
          set -xeuo pipefail
          continuous_integration/scripts/run-test-or-analysis ${{ inputs.test-scope }}

  test:
    if: github.repository_owner == 'nv-legate' && !inputs.use-container && inputs.enabled
    name: test-${{ inputs.build-target }}-sub-workflow
    runs-on: ${{ inputs.runs-on }}

    defaults:
      run:
        shell: bash

    steps:
      - if: inputs.build-target == 'gpu'
        name: Run nvidia-smi to make sure GPU is working
        run: nvidia-smi

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACTS_DIR }}

      - name: Display structure of the artifacts folder
        run: ls -aR ${{ env.ARTIFACTS_DIR }}
        
      - name: Run ${{ inputs.repos-name }} test / analysis
        run: |
          set -xeuo pipefail
          continuous_integration/scripts/run-test-or-analysis ${{ inputs.test-scope }}
